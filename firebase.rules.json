{
  "rules": {
    "players": {
      "$playerId": {
        "public": {
          ".read": "$playerId === auth.uid || (root.child('players').child(auth.uid).child('public').child('regionX').val() === data.child('regionX').val() && root.child('players').child(auth.uid).child('public').child('regionY').val() === data.child('regionY').val())",
          ".write": "$playerId === auth.uid",
          "regionX": {
            ".validate": "newData.isNumber()"
          },
          "regionY": {
            ".validate": "newData.isNumber()"
          },
          "x": {
            ".validate": "newData.isNumber()"
          },
          "y": {
            ".validate": "newData.isNumber()"
          }
        },
        "private": {
          ".read": "$playerId === auth.uid",
          ".write": "$playerId === auth.uid"
        }
      }
    },

    "world": {
      ".read": "auth.uid !== null"
    },

    "regions": {
      "$x": {
        "$y": {
          ".read": "data.child('players').child(auth.uid).val() === true",
          "players": {
            "$playerId": {
              ".write": "$playerId === auth.uid"
              //".validate": "root.child('players').child(auth.uid).child('regionId').val() === $regionId"
            }
          }
        }
      }
    }
  }
}
